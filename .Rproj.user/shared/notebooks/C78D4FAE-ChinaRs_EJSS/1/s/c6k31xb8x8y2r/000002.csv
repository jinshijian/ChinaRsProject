"0","summarySE <- function(data=NULL, measurevar, groupvars=NULL, na.rm=FALSE,"
"0","                      conf.interval=.95, .drop=TRUE) {"
"0","  library(plyr)"
"0","  "
"0","  # New version of length which can handle NA's: if na.rm==T, don't count them"
"0","  length2 <- function (x, na.rm=FALSE) {"
"0","    if (na.rm) sum(!is.na(x))"
"0","    else       length(x)"
"0","  }"
"0","  "
"0","  # This does the summary. For each group's data frame, return a vector with"
"0","  # N, mean, and sd"
"0","  datac <- ddply(data, groupvars, .drop=.drop,"
"0","                 .fun = function(xx, col) {"
"0","                   c(N    = length2(xx[[col]], na.rm=na.rm),"
"0","                     mean = mean   (xx[[col]], na.rm=na.rm),"
"0","                     sd   = sd     (xx[[col]], na.rm=na.rm)"
"0","                   )"
"0","                 },"
"0","                 measurevar"
"0","  )"
"0","  "
"0","  # Rename the ""mean"" column    "
"0","  datac <- rename(datac, c(""mean"" = measurevar))"
"0","  "
"0","  datac$se <- datac$sd / sqrt(datac$N)  # Calculate standard error of the mean"
"0","  "
"0","  # Confidence interval multiplier for standard error"
"0","  # Calculate t-statistic for confidence interval: "
"0","  # e.g., if conf.interval is .95, use .975 (above/below), and use df=N-1"
"0","  ciMult <- qt(conf.interval/2 + .5, datac$N-1)"
"0","  datac$ci <- datac$se * ciMult"
"0","  "
"0","  return(datac)"
"0","}"
